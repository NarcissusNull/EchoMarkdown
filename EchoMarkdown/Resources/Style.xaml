<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EchoMarkdown.Resources">
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Height="18" x:Name="bd" Background="#2d2d30">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="grid1" Width="*" MinWidth="60"></ColumnDefinition>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition x:Name="grid2" Width="*"></ColumnDefinition>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="cont" Margin="0,0" ContentSource="Header" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="0" Width="10"
                                                  Margin="4,0,6,0" x:Name="Icon" 
                                                  VerticalAlignment="Center" ContentSource="Icon"/>
                            <Popup HorizontalAlignment="Left" IsOpen="{Binding Path=IsSubmenuOpen, 
                                       RelativeSource ={RelativeSource TemplatedParent}}" 
                                       Placement="Bottom" x:Name="SubMenuPopup" Focusable="False" 
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border x:Name="SubMenuBorder" BorderBrush="#1b1b1c" 
                                        BorderThickness="2" Padding="2,2,2,2" Background="#1b1b1c">
                                    <!--{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}-->
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True  KeyboardNavigationMode = "Cycle" -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="SubMenuItem">
                            <Setter TargetName="cont"  Property="HorizontalAlignment" Value="Left"></Setter>
                            <Setter TargetName="cont"  Property="Grid.Column"         Value="1"></Setter>
                            <Setter TargetName="bd"    Property="Background"          Value="#1b1b1c"></Setter>
                            <Setter TargetName="grid1" Property="MinWidth"            Value="30"></Setter>
                            <Setter TargetName="grid2" Property="MinWidth"            Value="30"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Background" Value="#3e3e40"/>
                        </Trigger>
                        <Trigger Property= "IsSubmenuOpen" Value= "true" >
                            <Setter TargetName="bd" Property="Background" Value="#1b1b1c"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <!--<Setter Property="MinWidth" Value="40"></Setter>-->
        <!--<Setter Property="MinHeight" Value="{Binding Path=Height,RelativeSource={RelativeSource TemplatedParent}}"></Setter>-->
        <Setter Property="Background" Value="#2d2d30"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border   
                     Background="{TemplateBinding Background}"  
                     Margin="{TemplateBinding Margin}"  
                     Padding="{TemplateBinding Padding}"  
                     MinWidth="{TemplateBinding MinWidth}"   
                     MinHeight="{TemplateBinding MinHeight}"  
                     HorizontalAlignment="{TemplateBinding HorizontalAlignment}"   
                     VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Image Source="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}"></Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#3e3e40"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#1e1e1e"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>